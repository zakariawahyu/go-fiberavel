services:
  go:
    container_name: go-app
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    restart: always
    tty: true
    working_dir: /app
    volumes:
      - ./:/app
    networks:
      - go_networks

  nginx:
    image: nginx:1.27.2-alpine
    container_name: nginx-app
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d/
      - ./docker/nginx/logs:/var/log/nginx/
    networks:
      - go_networks

  postgres:
    image: postgres:17-alpine
    container_name: postgres-app
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - go_networks

  redis:
    image: redis:7.4.1-alpine
    container_name: redis-app
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - go_networks

networks:
  go_networks:
    driver: bridge
    
volumes:
  pg_data:
  redis_data: